{
  "$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
  "vcs": {
    "enabled": false,
    "clientKind": "git",
    "useIgnoreFile": false
  },
  "files": {
    "ignoreUnknown": false,
    "ignore": [
      "**/__tests__/**/*",
      "**/*.test.ts",
      "**/*.spec.ts",
      "src/migrations/**/*",
      "dist/**/*",
      "apps/*/dist/**",
      "apps/web/*/.next/**",
      "**/node_modules/**"
    ]
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 80,
    "attributePosition": "auto"
  },
  "organizeImports": {
    "enabled": true
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "complexity": {
        "noForEach": "error",
        "noStaticOnlyClass": "error",
        "noUselessSwitchCase": "error",
        "noUselessThisAlias": "error",
        "noUselessTypeConstraint": "error",
        "useArrowFunction": "off",
        "useDateNow": "error",
        "useFlatMap": "error",
        "noExcessiveCognitiveComplexity": "error"
      },
      "correctness": {
        "noInvalidBuiltinInstantiation": "error",
        "noUnusedVariables": "error",
        "useArrayLiterals": "off"
      },
      "style": {
        "noNamespace": "error",
        "noNegationElse": "off",
        "useAsConstAssertion": "error",
        "useBlockStatements": "off",
        "useExplicitLengthCheck": "error",
        "useFilenamingConvention": {
          "level": "off",
          "options": {
            "requireAscii": true,
            "filenameCases": ["kebab-case"]
          }
        },
        "useWhile": "error",
        "useForOf": "error",
        "useNodejsImportProtocol": "error",
        "useNumberNamespace": "warn",
        "useThrowNewError": "error",
        "useThrowOnlyError": "error"
      },
      "suspicious": {
        "noExplicitAny": "error",
        "noExtraNonNullAssertion": "error",
        "noMisleadingInstantiator": "error",
        "noThenProperty": "error",
        "noUnsafeDeclarationMerging": "error",
        "useAwait": "error",
        "useErrorMessage": "error",
        "useIsArray": "error",
        "useNamespaceKeyword": "error",
        "useNumberToFixedDigitsArgument": "error"
      }
    }
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "double"
    },
    "parser": {
      "unsafeParameterDecoratorsEnabled": true
    }
  }
}
